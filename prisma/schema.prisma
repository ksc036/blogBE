// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
}

model Post {
  id           Int      @id @default(autoincrement())
  title        String   // VARCHAR(255) 굳이 명시 안 해도 됨
  content      String
  thumbnailUrl String   // URL이라면 TEXT도 무방
  desc         String   // 게시글 설명, TEXT 적절
  visibility   Boolean  @default(true)
  postUrl      String   // TEXT로도 충분 (유니크 조건 추가 추천)
  viewCount    Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isDeleted    Boolean  @default(false) // 🔁 int 대신 boolean 추천
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // 관계
  post        Post      @relation(fields: [postId], references: [id])
  postId      Int

  user        User      @relation(fields: [userId], references: [id])
  userId      Int

  parent      Comment?  @relation("CommentToReplies", fields: [parentId], references: [id])
  parentId    Int?       // null이면 댓글, 있으면 대댓글

  replies     Comment[] @relation("CommentToReplies") // 대댓글들

  // soft delete나 상태 관리용
  isDeleted   Boolean   @default(false)
}